<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<http auto-config="true" use-expressions="true">
		<!-- <custom-filter position="FORM_LOGIN_FILTER" ref="customUsernamePasswordAuthenticationFilter" 
			/> -->
		<intercept-url pattern="/welcome**" access="isAuthenticated()" />
		<intercept-url pattern="/admin**" access="hasRole('ADMIN')" />

		<access-denied-handler error-page="/403" />
		<form-login login-page="/login" default-target-url="/welcome"
			authentication-failure-url="/login?error" username-parameter="username"
			password-parameter="password" authentication-success-handler-ref="customAuthenticationSuccessHandler" />
		<logout logout-url="/logout" invalidate-session="true"
			success-handler-ref="customLogoutSuccessHandler" />
		<!-- <csrf /> -->
	</http>

	<!-- <beans:bean id="customUsernamePasswordAuthenticationFilter" class="org.haze.sso.filter.CustomUsernamePasswordAuthenticationFilter"> 
		</beans:bean> -->

	<beans:bean id="customAuthenticationSuccessHandler"
		class="org.haze.sso.server.handler.HazeAuthenticationSuccessHandler">
		<beans:property name="ssoCacheService" ref="ssoCacheService" />
		<beans:property name="ssoServerConfig" ref="ssoServerConfig" />
	</beans:bean>

	<beans:bean id="ssoServerConfig" class="org.haze.sso.server.SsoServerConfig">
		<beans:property name="cacheCredentialExpireHours"
			value="8" />
	</beans:bean>

	<beans:bean id="customLogoutSuccessHandler"
		class="org.haze.sso.server.handler.HazeLogoutSuccessHandler">
		<beans:property name="ssoCacheService" ref="ssoCacheService" />
	</beans:bean>


	<authentication-manager>
		<authentication-provider ref="authenticationProvider" />
	</authentication-manager>

	<beans:bean id="authenticationProvider"
		class="org.haze.sso.server.HazeLoginAuthenticationProvider">
		<beans:property name="passwordEncoder" ref="encoder" />
		<beans:property name="userDetailsService" ref="customUserDetailsService" />
		<beans:property name="userDetailsDao" ref="userDetailsDao" />
	</beans:bean>

	<beans:bean id="encoder"
		class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">
		<beans:constructor-arg name="strength" value="10" />
	</beans:bean>
	
	<beans:bean id="customUserDetailsService" class="org.haze.sso.server.HazeUserDetailsService">
		<beans:property name="usersByUsernameQuery"
			value="SELECT d_username username,d_password password, d_enabled enabled,1 accountnonexpired,1 accountnonlocked,1 credentialsnonexpired FROM t_users WHERE d_username=?" />
		<beans:property name="authoritiesByUsernameQuery"
			value="SELECT d_username username, d_role role FROM t_user_roles WHERE d_username=?" />
		<beans:property name="dataSource" ref="dataSource" />
	</beans:bean>

	<beans:bean id="userDetailsDao" class="org.haze.sso.server.dao.support.UserDetailsDaoImpl">
		<beans:property name="dataSource" ref="dataSource" />
		<!-- 登录错误尝试次数 -->
		<beans:property name="maxAttempts" value="5" />
	</beans:bean>

</beans:beans>